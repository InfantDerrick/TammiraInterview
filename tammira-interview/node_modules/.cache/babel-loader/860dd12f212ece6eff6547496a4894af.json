{"ast":null,"code":"var _jsxFileName = \"/Users/infantderrick/Documents/Programming/TammiraInterview/tammira-interview/src/components/PostView.js\";\nimport React, { Component } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/actions';\n\nclass PostView extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, post.body))));\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 6,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, postItems))));\n  }\n\n}\n\nPostView.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostView);","map":{"version":3,"sources":["/Users/infantderrick/Documents/Programming/TammiraInterview/tammira-interview/src/components/PostView.js"],"names":["React","Component","Accordion","Card","Container","Row","Col","Button","PropTypes","connect","fetchPosts","PostView","componentWillMount","props","render","postItems","posts","map","post","Header","id","title","body","span","offset","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAIA,MAAMC,QAAN,SAAuBV,SAAvB,CAAgC;AAC9BW,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBACzC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAEf,IAAI,CAACgB,MAA3B;AAAmC,MAAA,QAAQ,EAAED,IAAI,CAACE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,KADR,CADF,eAIE,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEH,IAAI,CAACE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACI,IAAjB,CADF,CAJF,CADgB,CAAlB;AAUA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,SADH,CADF,CADF,CADJ,CADF;AAYD;;AA3B6B;;AA6BhCJ,QAAQ,CAACc,SAAT,GAAqB;AAClBf,EAAAA,UAAU,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADT;AAElBX,EAAAA,KAAK,EAAER,SAAS,CAACoB,KAAV,CAAgBD;AAFL,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYe;AADa,CAAL,CAA7B;;AAGA,eAAetB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,QAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchPosts } from '../actions/actions'\n\n\n\nclass PostView extends Component{\n  componentWillMount(){\n    this.props.fetchPosts()\n  }\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey={post.id}>\n          {post.title}\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey={post.id}>\n          <Card.Body>{post.body}</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    ))\n    return(\n      <Container>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }}>\n              <Accordion defaultActiveKey=\"0\">\n                {postItems}\n              </Accordion>\n            </Col>\n          </Row>\n      </Container>\n\n    )\n  }\n}\nPostView.propTypes = {\n   fetchPosts: PropTypes.func.isRequired,\n   posts: PropTypes.array.isRequired\n}\nconst mapStateToProps = state => ({\n  posts: state.posts.items\n}) \nexport default connect(mapStateToProps, { fetchPosts })(PostView);\n"]},"metadata":{},"sourceType":"module"}